dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(q3)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(interval)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(Map(function(x){c(q2['human', x], q2['mouse', x])}), interval)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(Map(function(x){c(q2['human', x], q2['mouse', x])}, interval)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(Map( function(x){ c(q2['human', x], q2['mouse', x]) })
, interval)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
q4 <- Map( function(x){ c(q2['human', x], q2['mouse', x]) })
, interval)
return(q4)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[1]}
, interval)
return(q3)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
dim(input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ])[2]}
, interval)
return(q3)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
q1 <- data.frame(human = human.quantile, mouse = mouse.quantile)
q2 <- apply(q1, 1, function(x){c(x['human'], x['mouse'])})
q3 <- Map(function(x){
input[input$`Human Reads` >= q2['human', x] | input$`Mouse Reads` >= q2['mouse', x], ]}
, interval)
return(q3)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
results <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }   , counter)
return(results)
}
mixedCutoff()
abudant.cells.kmean$centers
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(cluster.cells, cell.populations)
return(results)
}
## cluster a cell population
cluster.cells <- function(cells){
set.seed(124)
cells.kmean <- kmeans(log2(cells+1), iter.max = 10, centers = 4)
return(cells.kmean$centers)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(cluster.cells, cell.populations)
return(results)
}
## cluster a cell population
cluster.cells <- function(cells){
set.seed(124)
cells.kmean <- kmeans(log2(cells+1), centers = 4)
return(cells.kmean$centers)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(length, cell.populations)
return(results)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(dim, cell.populations)
return(results)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(function(x){dim(x)[1]}, cell.populations)
return(results)
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(function(x){dim(x)[1]}, cell.populations)
return(c(results, interval))
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(function(x){dim(x)[1]}, cell.populations)
return(data.frame(results, interval))
}
mixedCutoff()
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(function(x){dim(x)[1]}, cell.populations)
return(data.frame(unlist(results), interval))
}
mixedCutoff()
visual.cluters <- function(percentile){
interval <- seq(0.999,1,0.0001)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cells <- input[input$`Human Reads` >= human.quantile[percentile] | input$`Mouse Reads` >= mouse.quantile[percentile], ]
set.seed(124)
cells.kmean <- kmeans(log(cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
"orange")))
return(col)
}
plot(log(cells$`Human Reads` + 1), log(cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
}
visual.cluters(0.9990)
quantile(input$`Human Reads`, 0.9993)
human.q <- quantile(input$`Human Reads`, 0.9993)
mouse.q <-  quantile(input$`Mouse Reads`, 0.9993)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
"orange")))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
cutoff <- 0.9993
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
"orange")))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
cutoff <- 0.9993
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
cutoff <- 0.9994
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
cutoff <- 0.9995
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$cluster
abudant.cells.kmean$size
26/236
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
mixedCutoff()
cutoff <- 0.9995
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(14)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(1214)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 5)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(1214)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(14345214)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
cutoff <- 0.9996
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(615)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
abudant.cells.kmean$size
20/189
plot(input$`Human Reads`, input$`Mouse Reads`
, xlim=c(0,10000)
, ylim = c(0, 10000)
#, log = "yx"
, pch = 19, col = ifelse(input$`Human Reads` <= 100, "darkred", ifelse(input$`Mouse Reads`<= 100, "darkblue", "cornflowerblue")), cex = 0.1, xlab = "Human Reads", ylab = "Mouse Reads")
hist(log(input$`Human Reads`+1))
hist(log(input$`Mouse Reads`+1))
hist(log(log(input$`Mouse Reads`+1)))
hist(log(input$`Mouse Reads`+1))
quantile(input$`Human Reads`, seq(0.99,1,0.0001))
abudant.cells <- input[input$`Human Reads` >= 542 | input$`Mouse Reads` >= 535, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
"orange")))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
mixedCutoff <- function(){
interval <- seq(0.999,1,0.0001)
counter <- seq(1, length(interval), 1)
human.quantile <- quantile(input$`Human Reads`, interval)
mouse.quantile <- quantile(input$`Mouse Reads`, interval)
cell.populations <- Map(function(n){ input[input$`Human Reads` >= human.quantile[n] | input$`Mouse Reads` >= mouse.quantile[n], ] }, counter)
results <- Map(function(x){dim(x)[1]}, cell.populations)
return(data.frame(unlist(results), interval))
}
mixedCutoff()
cutoff <- 0.9994
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
cutoff <- 0.9995
human.q <- quantile(input$`Human Reads`, cutoff)
mouse.q <-  quantile(input$`Mouse Reads`, cutoff)
abudant.cells <- input[input$`Human Reads` >= human.q | input$`Mouse Reads` >= mouse.q, ]
plot(abudant.cells$`Human Reads` + 1, abudant.cells$`Mouse Reads` + 1, cex=0.2, pch = 19, log = "xy")
set.seed(124)
abudant.cells.kmean <- kmeans(log(abudant.cells+1), iter.max = 10, centers = 4)
cluster.color <- function()
{  a <- abudant.cells.kmean$cluster;
col <-  ifelse(a == 1, "red",
ifelse(a == 2, "blue",
ifelse(a == 3, "green",
ifelse(a == 4, "orange",
"darkgreen"))))
return(col)
}
plot(log(abudant.cells$`Human Reads` + 1), log(abudant.cells$`Mouse Reads` + 1), cex=0.2, pch = 19, col = cluster.color())
quantile(input$`Human Reads`, seq(0.99,1,0.0001))
abudant.cells <- input[input$`Human Reads` >= 1500 | input$`Mouse Reads` >= 1500, ]
abudant.cells
4^8
4^8^2
quantile(input$`Human Reads`, seq(0.99,1,0.0001))
